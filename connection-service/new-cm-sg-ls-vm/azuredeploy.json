{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
	    "vmSku": {
	      "type": "string",
	      "metadata": {
	        "description": "Size of VMs in the VM Scale Set."
	      }
	    },
	    "vmssName": {
	      "type":"string",
	      "metadata":{
	        "description":"String used as a base for naming resources. Must be 3-57 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
	      },
	      "maxLength": 57
	    },
	    "instanceCount": {
	      "type": "int",
	      "metadata": {
	        "description": "Number of VM instances (1000 or less)."
	      },
	      "maxValue": 1000
	    },
      "subnetId": {
          "type": "string",
          "metadata": {
              "description": "ID of the subnet that the SG's NIC's attach to"
          }
      },
      "sgNsgName": {
          "type": "string",
          "metadata": {
              "description": "Name of the network security group.",
              "minLength": 1,
              "maxLength": 80
          }
      },
      "appGwbackendAddressPoolId": {
          "type": "string",
          "metadata": {
              "description": "The ID of the app gateway backend pool to attach to"
          }
      },
      "vmAdminUsername": {
          "type": "string",
          "metadata": {
              "description": "The name of the administrator of the new VM's. Exclusion list: 'admin','administrator"
          }
      },
      "vmAdminPassword": {
          "type": "securestring",
          "metadata": {
              "description": "The password for the administrator account of the new VM's"
          }
      },
      "brokerFQDN": {
          "type": "string",
          "metadata": {
              "description": "IP or FQDN of the broker machine from the CM's perspective"
          }
      },
      "enableSecurityGateway": {
        "type": "string",
        "metadata": {
            "description": "'true' if the security gateway should be enabled and a Public IP address created, otherwise 'false'."
        }
      },
      "licenseInstanceId": {
        "type": "string",
        "metadata": {
          "description": "License Instance Id for the CAM deployment"
        }
      },
      "_artifactsLocation": {
          "type": "string",
          "metadata": {
              "description": "The location of resources, such as templates and DSC modules, that the template depends on"
          }
      },
      "_artifactsLocationSasToken": {
          "type": "securestring",
          "metadata": {
              "description": "Auto-generated token to access _artifactsLocation"
          },
          "defaultValue": ""
      }
    },
    "variables": {
      "namingInfix": "[toLower(parameters('vmssName'))]",
      "nicName": "[concat(variables('namingInfix'), 'nic')]",
      "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
      "imageReference": {
          "publisher": "OpenLogic",
          "offer": "CentOS",
          "sku": "7.4",
          "version": "latest"
      },
      "computeApiVersion": "2017-03-30",
      "networkApiVersion": "2017-04-01",
      "scriptFileName":  "cm_setup_0.1.sh",
      "scriptFileURI":  "[concat(parameters('_artifactsLocation'), '/', variables('scriptFileName'), parameters('_artifactsLocationSasToken'))]",
      "sumoCollectorID": "[concat('CAM-', parameters('licenseInstanceId'), '-', subscription().subscriptionId, '-', resourceGroup().name, '-', parameters('vmssName'))]",
      "commandToExecute": "[concat('./',variables('scriptFileName'),' ',parameters('brokerFQDN'),' ',variables('sumoCollectorID'),' ',parameters('_artifactsLocation'),' SecurityGatewayEnabled=',parameters('enableSecurityGateway'))]"
    },
    "resources": [
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('namingInfix')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('computeApiVersion')]",
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": true,
	    	"singlePlacementGroup": false,
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            },
            "dataDisks": [ ],
            "imageReference": "[variables('imageReference')]"
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
			      "adminUsername": "[parameters('vmAdminUsername')]",
            "adminPassword": "[parameters('vmAdminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "networkSecurityGroup": {
                      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('sgNsgName'))]"
                  },
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        },
                        "publicipaddressconfiguration": {
                          "condition": "[equals(parameters('enableSecurityGateway'), 'true')]",
                            "name": "pub1",
                            "properties": {
                              "idleTimeoutInMinutes": 15
                            }
                         },
                        "ApplicationGatewayBackendAddressPools": [
                          {
                            "id": "[parameters('appGwbackendAddressPoolId')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "customScript",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": "[split(variables('scriptFileURI'), ' ')]"
                  },
                  "protectedSettings": {
                    "commandToExecute": "[variables('commandToExecute')]"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ]
}
